// <auto-generated />
using System;
using DoofenshmirtzsWebShop.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoofenshmirtzsWebShop.Migrations
{
    [DbContext(typeof(DoofenshmirtzWebShopContext))]
    [Migration("20210924080326_nayeon")]
    partial class nayeon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Address", b =>
                {
                    b.Property<int>("addressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("addressCountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("addressCustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("addressPostalCode")
                        .HasColumnType("int");

                    b.Property<string>("addressStreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("addressID");

                    b.HasIndex("userID");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            addressID = 1,
                            addressCountryName = "TriState Area",
                            addressCustomerName = "Pinky the Chihuahua",
                            addressPostalCode = 6969,
                            addressStreetName = "2034 Danville Avenue",
                            userID = 2
                        },
                        new
                        {
                            addressID = 2,
                            addressCountryName = "TriState Area",
                            addressCustomerName = "Planty the PottedPlant",
                            addressPostalCode = 6969,
                            addressStreetName = "1001 Danville Boulevard",
                            userID = 3
                        });
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Category", b =>
                {
                    b.Property<int>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("categoryID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            categoryID = 1,
                            categoryName = "Products"
                        },
                        new
                        {
                            categoryID = 2,
                            categoryName = "Books"
                        },
                        new
                        {
                            categoryID = 3,
                            categoryName = "Merch"
                        });
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Order", b =>
                {
                    b.Property<int>("orderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("orderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("orderID");

                    b.HasIndex("userID");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            orderID = 1,
                            orderDate = new DateTime(2021, 9, 21, 12, 23, 21, 0, DateTimeKind.Unspecified),
                            userID = 2
                        },
                        new
                        {
                            orderID = 2,
                            orderDate = new DateTime(2021, 10, 21, 12, 23, 21, 0, DateTimeKind.Unspecified),
                            userID = 3
                        },
                        new
                        {
                            orderID = 3,
                            orderDate = new DateTime(2021, 9, 25, 12, 23, 21, 0, DateTimeKind.Unspecified),
                            userID = 3
                        });
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.OrderItem", b =>
                {
                    b.Property<int>("orderItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("orderID")
                        .HasColumnType("int");

                    b.Property<int>("orderItemPrice")
                        .HasColumnType("int");

                    b.Property<int>("orderItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.HasKey("orderItemID");

                    b.HasIndex("orderID");

                    b.HasIndex("productID");

                    b.ToTable("OrderItem");

                    b.HasData(
                        new
                        {
                            orderItemID = 1,
                            orderID = 1,
                            orderItemPrice = 100,
                            orderItemQuantity = 1,
                            productID = 1
                        },
                        new
                        {
                            orderItemID = 2,
                            orderID = 1,
                            orderItemPrice = 30,
                            orderItemQuantity = 1,
                            productID = 1
                        },
                        new
                        {
                            orderItemID = 3,
                            orderID = 2,
                            orderItemPrice = 125,
                            orderItemQuantity = 5,
                            productID = 2
                        },
                        new
                        {
                            orderItemID = 4,
                            orderID = 2,
                            orderItemPrice = 30,
                            orderItemQuantity = 1,
                            productID = 2
                        },
                        new
                        {
                            orderItemID = 5,
                            orderID = 3,
                            orderItemPrice = 30,
                            orderItemQuantity = 1,
                            productID = 3
                        },
                        new
                        {
                            orderItemID = 6,
                            orderID = 3,
                            orderItemPrice = 500,
                            orderItemQuantity = 55,
                            productID = 3
                        });
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Product", b =>
                {
                    b.Property<int>("productID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("categoryID")
                        .HasColumnType("int");

                    b.Property<string>("productDescription")
                        .HasColumnType("nvarchar(3200)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("productPrice")
                        .HasColumnType("int");

                    b.Property<int>("productStock")
                        .HasColumnType("int");

                    b.HasKey("productID");

                    b.HasIndex("categoryID");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            productID = 1,
                            categoryID = 1,
                            productDescription = "Tired of listening to meaningless things all the time? try blasting them with this gun and you'll never have to hear them again!",
                            productName = "The I-Don't-Care-Inator",
                            productPrice = 49,
                            productStock = 7
                        },
                        new
                        {
                            productID = 2,
                            categoryID = 1,
                            productDescription = "Dr. Heinz Doofenshmirtz' no. 1 guide to everything you need to know about being evil!",
                            productName = "Kill-half-the-people-in-the-world-with-a-snap-Inator",
                            productPrice = 299,
                            productStock = 2
                        },
                        new
                        {
                            productID = 3,
                            categoryID = 1,
                            productDescription = "Support your local evil branch with this T-shirt!",
                            productName = "Shut-The-Hell-Up-Inator",
                            productPrice = 50,
                            productStock = 8
                        });
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.ProductImage", b =>
                {
                    b.Property<int>("productImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.Property<string>("productImageImage")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<string>("productImageImageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("productImageID");

                    b.HasIndex("productID");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("userPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("userRole")
                        .HasColumnType("int");

                    b.HasKey("userID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            userID = 1,
                            userEmail = "doofen@evil.com",
                            userName = "EvilMaster",
                            userPassword = "DamnYouPerry",
                            userRole = 0
                        },
                        new
                        {
                            userID = 2,
                            userEmail = "perry@platypus.com",
                            userName = "Perry",
                            userPassword = "Doofenia",
                            userRole = 1
                        },
                        new
                        {
                            userID = 3,
                            userEmail = "planty@pottedplant.com",
                            userName = "Planty",
                            userPassword = "Planty1234",
                            userRole = 1
                        });
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Address", b =>
                {
                    b.HasOne("DoofenshmirtzsWebShop.Database.Entities.User", null)
                        .WithMany("address")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Order", b =>
                {
                    b.HasOne("DoofenshmirtzsWebShop.Database.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.OrderItem", b =>
                {
                    b.HasOne("DoofenshmirtzsWebShop.Database.Entities.Order", null)
                        .WithMany("orderItems")
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoofenshmirtzsWebShop.Database.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Product", b =>
                {
                    b.HasOne("DoofenshmirtzsWebShop.Database.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.ProductImage", b =>
                {
                    b.HasOne("DoofenshmirtzsWebShop.Database.Entities.Product", "product")
                        .WithMany("ImageList")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Order", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.Product", b =>
                {
                    b.Navigation("ImageList");
                });

            modelBuilder.Entity("DoofenshmirtzsWebShop.Database.Entities.User", b =>
                {
                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
